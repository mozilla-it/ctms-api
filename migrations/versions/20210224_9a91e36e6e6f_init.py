"""Init

Revision ID: 9a91e36e6e6f
Revises:
Create Date: 2021-02-19 13:55:23.527456

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "9a91e36e6e6f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "emails",
        sa.Column("email_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("primary_email", sa.String(length=255), nullable=False),
        sa.Column("basket_token", sa.String(length=255), nullable=True),
        sa.Column("sfdc_id", sa.String(length=255), nullable=True),
        sa.Column("mofo_id", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("mailing_country", sa.String(length=255), nullable=True),
        sa.Column("email_format", sa.String(length=1), nullable=True),
        sa.Column("email_lang", sa.String(length=5), nullable=True),
        sa.Column("mofo_relevant", sa.Boolean(), nullable=True),
        sa.Column("has_opted_out_of_email", sa.Boolean(), nullable=True),
        sa.Column("unsubscribe_reason", sa.Text(), nullable=True),
        sa.Column("create_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("update_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("email_id"),
        sa.UniqueConstraint("basket_token"),
        sa.UniqueConstraint("primary_email"),
    )
    op.create_table(
        "amo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("add_on_ids", sa.String(length=500), nullable=True),
        sa.Column("display_name", sa.String(length=255), nullable=True),
        sa.Column("email_opt_in", sa.Boolean(), nullable=True),
        sa.Column("language", sa.String(length=5), nullable=True),
        sa.Column("last_login", sa.Date(), nullable=True),
        sa.Column("location", sa.String(length=10), nullable=True),
        sa.Column("profile_url", sa.String(length=40), nullable=True),
        sa.Column("user", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.String(length=40), nullable=True),
        sa.Column("username", sa.String(length=100), nullable=True),
        sa.Column("create_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("update_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.email_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_id"),
    )
    op.create_table(
        "fxa",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("fxa_id", sa.String(length=255), nullable=True),
        sa.Column("email_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("primary_email", sa.String(length=255), nullable=True),
        sa.Column("created_date", sa.String(length=50), nullable=True),
        sa.Column("lang", sa.String(length=255), nullable=True),
        sa.Column("first_service", sa.String(length=50), nullable=True),
        sa.Column("account_deleted", sa.Boolean(), nullable=True),
        sa.Column("create_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("update_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.email_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_id"),
        sa.UniqueConstraint("fxa_id"),
    )
    op.create_table(
        "newsletters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("subscribed", sa.Boolean(), nullable=True),
        sa.Column("format", sa.String(length=1), nullable=True),
        sa.Column("lang", sa.String(length=5), nullable=True),
        sa.Column("source", sa.Text(), nullable=True),
        sa.Column("unsub_reason", sa.Text(), nullable=True),
        sa.Column("create_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("update_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.email_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vpn_waitlist",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("geo", sa.String(length=100), nullable=True),
        sa.Column("platform", sa.String(length=100), nullable=True),
        sa.Column("create_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("update_timestamp", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.email_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vpn_waitlist")
    op.drop_table("newsletters")
    op.drop_table("fxa")
    op.drop_table("amo")
    op.drop_table("emails")
    # ### end Alembic commands ###

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "ctms-api"
version = "0.4.0"
description = "Contact Management System API"
authors = [
    "John Whitlock <jwhitlock@mozilla.com>",
    "Bryan Sieber <bsieber@mozilla.com>",
]
readme = "README.md"
homepage = "https://github.com/mozilla-it/ctms-api"
repository = "https://github.com/mozilla-it/ctms-api"
documentation = "https://github.com/mozilla-it/ctms-api"


[tool.poetry.dependencies]
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = ">=3.7, <4"
fastapi = "^0.61.1"
requests = "^2.24.0"
uvicorn = "^0.12.2"
gunicorn = "^20.0.4"
pydantic = {extras = ["email"], version = "^1.7.3"}
SQLAlchemy = "^1.3.23"


[tool.poetry.dev-dependencies]
pre-commit = "^2.7.1"
sphinx = "^3.2.1"
behave = "^1.2.6"
pytest = "^6.1.2"
isort = {extras = ["pyproject"], version = "^4.3.21"}
black = "^20.8b1"
coverage = {extras = ["toml"], version = "^5.3"}
mypy = "^0.782"
detect-secrets = "^0.14.3"
bandit = "^1.7.0"

[tool.pytest.ini_options]
python_files = "*.py"
python_functions = "test_*"
testpaths = [
    "tests",
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
# https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88


[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]
    omit = [
        '*/.local/*',
        '/usr/*',
        '*/.venv/*',
        '*/.tox/*',
        '*/virtualenvs/*',
    ]

    [tool.coverage.report]

    exclude_lines = [
        "# noqa",
        "raise NotImplementedError",
        "pragma: no cover",
        "def __repr__",
        "if .debug:",
        "raise NotImplementedError",
        "if __name__ == .__main__.:",
        "logger.",
        "from",
        "import"
    ]

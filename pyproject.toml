[build-system]
requires = ["poetry>=1.7"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "ctms"
version = "0"
description = "Contact Management System API"
authors = ["CTMS Reviewers <@mozilla-it/ctms-reviewers>"]


[tool.poetry.dependencies]
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = "^3.12.1"
fastapi = "^0.108.0"
starlette = "^0.32.0"
requests = "^2.32.3"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
pydantic = {extras = ["email"], version = "^2.8.2"}
SQLAlchemy = ">=1.4.51,<1.5"
alembic = "^1.13.2"
python-multipart = "^0.0.9"
python-jose = {extras = ["cryptography"], version = "^3.2.0"}
passlib = {extras = ["argon2"], version = "^1.7.4"}
python-dateutil = "^2.9.0"
dockerflow = "^2022.8.0"
sentry-sdk = "^2.10.0"
lxml = "^5.2.2"
prometheus-client = "0.20.0"
structlog = "^24.2.0"
colorama = "^0.4.6"
psycopg2 = "^2.9.9"
google-auth = "^2.32.0"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
sphinx = "^7.4.0"
pytest = "^8.2.0"
isort = {extras = ["pyproject"], version = "^5.13.2"}
black = "^24.4.2"
coverage = {extras = ["toml"], version = "^7.6"}
mypy = "^1.10"
types-python-dateutil = "^2.9.0"
detect-secrets = "^1.5.0"
bandit = "^1.7.9"
SQLAlchemy-Utils = "^0.41.2"
pylint = "^3.2.5"
pylint-pytest = "^1.1.8"
types-requests = "^2.32.0"
factory-boy = "^3.3.0"
pytest-factoryboy = "^2.7.0"
backoff = "^2.2.1"
httpx = "^0.27.0"

[tool.pytest.ini_options]
testpaths = [
    "tests/unit",
]

[tool.pylint]
    [tool.pylint.'MESSAGES CONTROL']
    disable = [
        "R0801", # sqla has a lot of duplicate code and it is work to "fix" this
        "C0301", # if black is happy with the line-length, let's not mess with it
        "R0903", # this is triggered by pydantic's config and is really just a taste thing anyway
        "R0913", # we have too-many-arguments in too many places to easily fix
        "R0912", # Same idea as above, let's leave it since it is a matter of taste
        "W0511", # Let us have our TODOs
        "W0613", # sometimes unused arguments are nice for symmetry and also api methods
        "R0914", # Leave me alone, pylint. I can have as many locals as I want

        "C0114", # mozilla-it/ctms-api#100
        "C0115", # mozilla-it/ctms-api#100
        "C0116", # mozilla-it/ctms-api#100
    ]
    [tool.pylint.REPORTS]
    output-format = 'colorized'
    [tool.pylint.FORMAT]
    good-names = 'e,i,f,db,SessionLocal' # Normally pylint objects to these due to not being snake_case
    [tool.pylint.TYPECHECK]
    generated-members='alembic.*'
    [tool.pylint.MASTER]
    extension-pkg-whitelist='pydantic'
    load-plugins='pylint_pytest'
    ignore='third_party'
    ignore-patterns = "migrations/.*" # Not worth fixing yet

[tool.isort]
profile = "black"


[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]
    omit = [
        '*/.local/*',
        '/usr/*',
        '*/.venv/*',
        '*/.tox/*',
        '*/virtualenvs/*',
    ]

    [tool.coverage.report]

    exclude_lines = [
        "# noqa",
        "raise NotImplementedError",
        "pragma: no cover",
        "def __repr__",
        "if .debug:",
        "raise NotImplementedError",
        "if __name__ == .__main__.:",
        "logger.",
        "from",
        "import"
    ]

[tool.mypy]
# Sync Python version with Dockerfile
python_version = "3.12"
# Look for errors in this file
warn_unused_configs = true
plugins = ["pydantic.mypy"]

# TODO: Get stricter for these options
# None is compatible with all types (pre-mypy 0.6 behaviour)
strict_optional = false
# Suppress all missing import errors for all libraries
ignore_missing_imports = true

# Warn when returning Any from function with non-Any return
warn_return_any = true

[[tool.mypy.overrides]]
module = "ctms.auth"
strict_optional = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = "ctms.crud"
strict_optional = true
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = "ctms.metrics"
strict_optional = true
ignore_missing_imports = false
disallow_untyped_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "ctms.log"
strict_optional = true
ignore_missing_imports = false
disallow_untyped_defs = true
check_untyped_defs = true

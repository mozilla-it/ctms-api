[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "ctms"
version = "0.7.2"
description = "Contact Management System API"
authors = [
    "Brian Stack <bstack@mozilla.com>",
    "Bryan Sieber <bsieber@mozilla.com>",
    "John Whitlock <jwhitlock@mozilla.com>",
]
readme = "README.md"
homepage = "https://github.com/mozilla-it/ctms-api"
repository = "https://github.com/mozilla-it/ctms-api"
documentation = "https://github.com/mozilla-it/ctms-api"


[tool.poetry.dependencies]
# These packages are mandatory and form the core of this packageâ€™s distribution.
python = ">=3.7, <3.10" # google-cloud-bigquery requires this range
fastapi = "^0.61.1"
requests = "^2.24.0"
uvicorn = {extras = ["standard"], version = "^0.13.4"}
gunicorn = "^20.0.4"
pydantic = {extras = ["email"], version = "^1.7.3"}
psycopg2-binary = "^2.8.6"
SQLAlchemy = "^1.3.23"
alembic = "^1.5.4"
python-multipart = "^0.0.5"
python-jose = {extras = ["cryptography"], version = "^3.2.0"}
passlib = {extras = ["argon2"], version = "^1.7.4"}
python-dateutil = "^2.8.1"
google-cloud-bigquery = "^2.13.1"
dockerflow = "^2020.10.0"
sentry-sdk = "^1.0.0"
pysilverpop = "^0.2.6"
lxml = "^4.6.2"
Django = "^3.2.1"


[tool.poetry.dev-dependencies]
pre-commit = "^2.7.1"
sphinx = "^3.2.1"
pytest = "^6.1.2"
isort = {extras = ["pyproject"], version = "^4.3.21"}
black = "^20.8b1"
coverage = {extras = ["toml"], version = "^5.3"}
mypy = "^0.782"
detect-secrets = "^0.14.3"
bandit = "^1.7.0"
SQLAlchemy-Utils = "^0.36.8"
pylint = "^2.7.2"
pylint-pytest = "^1.1.2"

[tool.pytest.ini_options]
testpaths = [
    "tests/unit",
]

[tool.pylint]
    [tool.pylint.'MESSAGES CONTROL']
    disable = [
        # https://black.readthedocs.io/en/stable/compatible_configs.html
        "C0330",
        "C0326",

        "R0801", # sqla has a lot of duplicate code and it is work to "fix" this
        "C0301", # if black is happy with the line-length, let's not mess with it
        "R0903", # this is triggered by pydantic's config and is really just a taste thing anyway
        "R0913", # we have too-many-arguments in too many places to easily fix
        "R0912", # Same idea as above, let's leave it since it is a matter of taste
        "W0511", # Let us have our TODOs
        "W0613", # sometimes unused arguments are nice for symmetry and also api methods
        "R0201", # Not using "self" when it is defined is a matter of taste
        "R0914", # Leave me alone, pylint. I can have as many locals as I want

        "C0114", # mozilla-it/ctms-api#100
        "C0115", # mozilla-it/ctms-api#100
        "C0116", # mozilla-it/ctms-api#100
    ]
    [tool.pylint.REPORTS]
    output-format = 'colorized'
    [tool.pylint.FORMAT]
    good-names = 'e,i,f,db,SessionLocal' # Normally pylint objects to these due to not being snake_case
    [tool.pylint.TYPECHECK]
    generated-members='alembic.*'
    [tool.pylint.MASTER]
    extension-pkg-whitelist='pydantic'
    load-plugins='pylint_pytest'
    ignore='third_party'
    ignore-patterns = "migrations/.*" # Not worth fixing yet

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
# https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88


[tool.coverage]
# https://github.com/nedbat/coveragepy
    [tool.coverage.run]
    omit = [
        '*/.local/*',
        '/usr/*',
        '*/.venv/*',
        '*/.tox/*',
        '*/virtualenvs/*',
    ]

    [tool.coverage.report]

    exclude_lines = [
        "# noqa",
        "raise NotImplementedError",
        "pragma: no cover",
        "def __repr__",
        "if .debug:",
        "raise NotImplementedError",
        "if __name__ == .__main__.:",
        "logger.",
        "from",
        "import"
    ]
